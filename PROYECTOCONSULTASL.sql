
--CINCO CONSULTAS CON ALGEBRA RELACIONAL 

SELECT NOMBRE,COSTO FROM VIDEOJUEGO 
WHERE ID_CLAS=(SELECT ID_CLAS FROM CLASIFICACION 
WHERE CLASIFICACION ='T');

SELECT NOMBRE,COSTO FROM VIDEOJUEGO 
ORDER BY COSTO;

SELECT ID_CLAS AS CLASIFICACION, COUNT (ID_CLAS) AS JUEGOS
FROM VIDEOJUEGO 
GROUP BY ID_CLAS;


SELECT NOMBRE,COSTO 
FROM VIDEOJUEGO 
WHERE COSTO BETWEEN 500 AND 900;

SELECT NOMBRE, FECHA_LANZAMIENTO FROM VIDEOJUEGO
WHERE FECHA_LANZAMIENTO BETWEEN'01/01/19'  AND  '05/12/2021'
ORDER BY FECHA_LANZAMIENTO;


Select * from cliente
where id_tipo=(Select id_tipo from Tipo
                where DESCPREFERENTE='cliente Preferente');
                
        

-- CONSULTAS CON AGREGACION
SELECT V.NOMBRE,V.COSTO, Cl.CLASIFICACION 
FROM VIDEOJUEGO V INNER JOIN CLASIFICACION Cl
ON V.ID_CLAS = Cl.ID_CLAS 
WHERE COSTO = (SELECT MAX (COSTO) FROM VIDEOJUEGO);
                
SELECT SUM (COSTO)
FROM VIDEOJUEGO; 

SELECT SUM (ID_TIPO)
FROM CLIENTE;

-- 2 JOINS

SELECT V.NOMBRE,V.FECHA_LANZAMIENTO,C.CLASIFICACION 
FROM VIDEOJUEGO V LEFT JOIN CLASIFICACION C
ON V.ID_CLAS = C.ID_CLAS;

SELECT C.ID_EQUIPO, C.NUM_SERIE, R.NUM_CLIENTE 
FROM CONSOLA C LEFT JOIN RENTACLIENTE R
ON C.ID_EQUIPO = R.ID_EQUIPO
WHERE R.NUM_CLIENTE IS NULl;


--VISTAS

CREATE VIEW RENTACLIENTE_CONSOLA_VIEW AS 
SELECT C.ID_EQUIPO, C.NUM_SERIE 
FROM CONSOLA C LEFT JOIN RENTACLIENTE RC 
ON C.ID_EQUIPO = RC.ID_EQUIPO
WHERE RC.ID_EQUIPO IS NULL;

SELECT * FROM RENTACLIENTE_CONSOLA_VIEW;


CREATE VIEW CLIENTE_CONSOLA_JUEGO_VIEW AS
SELECT CL.NOMPILA, CL.APELLIDOPATER, RC.ID_EQUIPO, V.NOMBRE
FROM RENTACLIENTE RC INNER JOIN CLIENTE  CL
ON RC.NUM_CLIENTE = CL.NUM_CLIENTE
JOIN  VIDEOJUEGO V
ON RC.ID_VIDEOJUEGO = V.ID_VIDEOJUEGO;

SELECT * FROM CLIENTE_CONSOLA_JUEGO_VIEW;





---Procesos de almacenamientos-- 
CREATE SEQUENCE NUM_CLIENTE
START WITH 30 
INCREMENT BY 1;

CREATE SEQUENCE NUM_CLIENTE_CORREO
START WITH 30 
INCREMENT BY 1;

CREATE OR REPLACE PROCEDURE DATOS_CLIENTE( NOMPILA VARCHAR, APELLIDOPATER VARCHAR, APELLIDOMATER VARCHAR, ID_TIPO NUMBER)
IS 
BEGIN 
   INSERT INTO CLIENTE VALUES (NUM_CLIENTE.NEXTVAL, NOMPILA, APELLIDOPATER, APELLIDOMATER, ID_TIPO);
   DBMS_OUTPUT.PUT_LINE('ALTA CORRECTA');
END DATOS_CLIENTE;

EXECUTE DATOS_CLIENTE('Pedro','Angel','Sosa',0);
EXECUTE DATOS_CLIENTE('Ange','Alvirde','Sosa',1);

CREATE OR REPLACE PROCEDURE correo_cliente(CORREO VARCHAR)
IS 
BEGIN 
   INSERT INTO CORREOCLIENTE VALUES (NUM_CLIENTE_CORREO.NEXTVAL,CORREO );
   DBMS_OUTPUT.PUT_LINE('ALTA CORRECTA');
END CORREO_CLIENTE;

EXECUTE CORREO_CLIENTE('celis@gmail.com');
EXECUTE CORREO_CLIENTE('pedro99@gmail.com');
EXECUTE CORREO_CLIENTE('angel99@gmail.com');


CREATE OR REPLACE PROCEDURE FIN_RENTA (EQUIPO NUMBER)
IS 
BEGIN 
 DELETE RENTACLIENTE WHERE ID_EQUIPO=EQUIPO;
 DELETE EJEMPLAR WHERE ID_EQUIPO=EQUIPO;
 DBMS_OUTPUT.PUT_LINE('La consola fue desocupada'); 
 COMMIT;
END FIN_RENTA;

begin
FIN_RENTA(10);
END;


CREATE OR REPLACE PROCEDURE BORRAR_CLIENTE(ID_C NUMBER)
IS
BEGIN 
    DELETE CORREOCLIENTE WHERE NUM_CLIENTE=ID_C;
    DELETE CLIENTE WHERE NUM_CLIENTE=ID_C;
    DBMS_OUTPUT.PUT_LINE('Cliente eliminado'); 
    commit;
END BORRAR_CLIENTE;

BEGIN
BORRAR_CLIENTE(11);
END;





CREATE OR REPLACE PROCEDURE ACTUALIZAR_CLIENTE (ID_C NUMBER, CLIENTE NUMBER)
IS 
BEGIN 
   UPDATE CLIENTE SET ID_TIPO=CLIENTE WHERE NUM_CLIENTE=ID_C;
   DBMS_OUTPUT.PUT_LINE ('El tipo de cliente ha sido modificado');
   COMMIT;
END ACTUALIZAR_CLIENTE;

BEGIN 
ACTUALIZAR_CLIENTE (1,1);
END;




--TRIGGER

CREATE TABLE MOVIMIENTOS (
TIPO VARCHAR (20),
USUARIO VARCHAR (20),
FECHA TIMESTAMP 
); 

CREATE OR REPLACE TRIGGER AUDITORIA 
BEFORE INSERT OR UPDATE OR DELETE ON CLIENTE
FOR EACH ROW 
DECLARE 
BEGIN 
   IF INSERTING THEN 
   INSERT INTO MOVIMIENTOS VALUES ('Inserto',USER,SYSDATE);
   ELSIF UPDATING THEN 
   INSERT INTO MOVIMIENTOS VALUES ('Actualizo',USER,SYSDATE);
   ELSIF DELETING THEN 
   INSERT INTO MOVIMIENTOS VALUES ('Elimino',USER,SYSDATE);
   END IF;
END;

SELECT * FROM CLIENTE;